@model AIS.Models.FlightsFiltersViewModel
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration

@{
    ViewData["Title"] = "Home";
}

<style>
    .filter-header {
        font-size: 1.4rem;
        font-weight: bolder;
    }

    .filter-text {
        font-size: 0.9rem;
    }
</style>

<form asp-action="Index">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="container">
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <label asp-for="OriginId" class="control-label filter-header text-muted"></label>
                    <select id="originSelect" asp-for="OriginId" asp-items="Model.OriginList" class="form-control">
                        <option value="0">Select an Origin</option>
                    </select>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label filter-text ">
                        <input class="form-check-input" asp-for="FilterByOrigin" style="margin-top: 0.4rem" /> @Html.DisplayNameFor(model => model.FilterByOrigin)
                    </label>
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    <label asp-for="DestinationId" class="control-label filter-header text-muted"></label>
                    <select id="destinationSelect" asp-for="DestinationId" asp-items="Model.DestinationList" class="form-control">
                        <option value="0">Select a Destination</option>
                    </select>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label filter-text ">
                        <input class="form-check-input" asp-for="FilterByDestination" style="margin-top: 0.4rem" /> @Html.DisplayNameFor(model => model.FilterByDestination)
                    </label>
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    <label asp-for="Departure" class="control-label filter-header text-muted"></label>
                    <input id="departureDate" asp-for="Departure" class="form-control" type="datetime-local" value="@Model.Departure.ToString("yyyy-MM-ddTHH:mm")" />
                    <span asp-validation-for="Departure" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label filter-text ">
                        <input class="form-check-input" asp-for="FilterByDeparture" style="margin-top: 0.4rem" /> @Html.DisplayNameFor(model => model.FilterByDeparture)
                    </label>
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    <label asp-for="Arrival" class="control-label filter-header text-muted"></label>
                    <input id="arrivalDate" asp-for="Arrival" class="form-control" type="datetime-local" value="@Model.Arrival.ToString("yyyy-MM-ddTHH:mm")" />
                    <span asp-validation-for="Arrival" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label filter-text ">
                        <input class="form-check-input" asp-for="FilterByArrival" style="margin-top: 0.4rem" /> @Html.DisplayNameFor(model => model.FilterByArrival)
                    </label>
                </div>
            </div>
            <div class="col">
                <button type="submit" class="btn btn-success" style="margin-left: 15%; margin-top: 22.6%">
                    <i class="fa-solid fa-magnifying-glass mr-2"></i>Search Flights
                </button>
            </div>
        </div>
    </div>
</form>

<table class="table mt-1">
    <thead>
        <tr>
            <th>
                Origin
            </th>
            <th>
                Destination
            </th>
            <th>
                Departure
            </th>
            <th>
                Arrival
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Flights != null && Model.Flights.Any())
        {
            @foreach (var item in Model.Flights)
            {
                <tr>
                    <td>
                        @item.Origin.City, @item.Origin.Country
                        <br />
                        <img src="@Url.Content(item.Origin.ImageUrl)" class="mt-2" alt="Country Flag Image" style="height:5vh; border:solid; border-color: lightgray; border-width: 0.5px" />
                    </td>
                    <td>
                        @item.Destination.City, @item.Destination.Country
                        <br />
                        <img src="@Url.Content(item.Destination.ImageUrl)" class="mt-2" alt="Country Flag Image" style="height:5vh; border:solid; border-color: lightgray; border-width: 0.5px" />
                    </td>
                    <td>
                        @item.Departure.ToString("dd MMMM, yyyy HH:mm'h'")
                    </td>
                    <td>
                        @item.Arrival.ToString("dd MMMM, yyyy HH:mm'h'")
                    </td>
                    <td>
                        <a asp-controller="Tickets" asp-action="Create" asp-route-id="@item.Id" class="btn btn-success mr-2 mb-2"><i class="fa-solid fa-ticket mr-2"></i>Buy Ticket</a><br>
                        <a asp-controller="Flights" asp-action="FlightInformation" asp-route-id="@item.Id" class="btn btn-info mb-2"><i class="fa-solid fa-circle-info mr-2"></i>Information</a><br>
                        <a asp-action="Gallery" asp-route-id="@item.Destination.Id" class="btn btn-primary mr-2"><i class="fa-solid fa-camera mr-2"></i>Destination</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

        // Scripts for selection UI/UX
        <script>
            document.getElementById('originSelect').addEventListener('change', function () {

                var originValue = this.value;
                var destinationSelect = document.getElementById('destinationSelect');
                var options = destinationSelect.options;

                // Reset the destination dropdown to its default option (When both are selected, if we go back to the first, so it doesnt conflict)
                destinationSelect.value = "0";

                // Enable and reset all airports in the destination dropdown
                for (var i = 0; i < options.length; i++) {
                    options[i].disabled = false;
                    options[i].style.color = ''; // Reset color to default
                }

                // Disable and grey out the airport in the destination dropdown that matches the selected origin airport
                if (originValue !== "0") {
                    for (var i = 0; i < options.length; i++) {
                        if (options[i].value === originValue) {
                            options[i].disabled = true; // Disable the airport
                            options[i].style.color = 'grey'; // Change color to grey
                        }
                    }
                }
            });

            document.getElementById('originSelect').addEventListener('click', function () {

                var originSelect = document.getElementById('originSelect');
                var options = originSelect.options;

                options[0].style.color = 'grey';
            });

            document.getElementById('destinationSelect').addEventListener('click', function () {

                var destinationSelect = document.getElementById('destinationSelect');
                var options = destinationSelect.options;

                options[0].style.color = 'grey';
            });

        </script>
    }
}