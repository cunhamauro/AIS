@model AIS.Models.AircraftViewModel

@{
    ViewData["Title"] = "Add Aircraft";
}

<h2 class="title-text" style="text-align: center; margin-bottom: 4vh; font-weight: bolder; margin-top: 3.5vh">Add Aircraft</h2>

<hr />
<div class="row">
    <div class="col-md-4 offset-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Model" class="control-label"></label>
                <input asp-for="Model" class="form-control" />
                <span asp-validation-for="Model" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Capacity" class="control-label"></label>
                <input id="capacity" asp-for="Capacity" class="form-control" />
                <span asp-validation-for="Capacity" class="text-danger"></span>
            </div>
@*             <div class="form-group">
                <label asp-for="Rows" class="control-label"></label>
                <input id="rows" asp-for="Rows" class="form-control" />
                <span asp-validation-for="Rows" class="text-danger"></span>
            </div> *@
            <div class="form-group">
            <label asp-for="Rows" class="control-label">Rows</label>
            <select asp-for="Rows" id="rows" name="Rows" class="form-control">
                <!-- Options will be populated dynamically -->
            </select>
            <span asp-validation-for="Rows" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ImageFile" class="control-label"></label>
                <input asp-for="ImageFile" class="form-control" type="file" />
                <span asp-validation-for="ImageFile" class="text-danger"></span>
            </div>
            <div class="form-group form-check" style="display:flex; align-items:center">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" style="margin-top: 0.4rem" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            <ejs-message id="msg_info" severity="Info" content="The Aircraft's status is active by default!" style="margin-top: -2%; margin-bottom: 5%;     border-radius: 5px;"></ejs-message>

            <div class="form-group">
                <button type="submit" class="btn btn-success mr-2">
                    <i class="fa-solid fa-check mr-2"></i>Save
                </button>
                <a asp-action="Index" class="btn btn-secondary"><i class="fa-solid fa-chevron-left mr-2"></i>Back</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const capacityInput = document.getElementById('capacity');
                const rowsSelect = document.getElementById('rows');

                // Populate the rows dropdown when the page loads and when capacity changes
                populateRowsDropdown(); // Call on initial load
                capacityInput.addEventListener('input', populateRowsDropdown); // Update on input change

                function populateRowsDropdown() {
                    let capacity = parseInt(capacityInput.value);

                    // Clear existing options
                    rowsSelect.innerHTML = '';

                    // If capacity is invalid or zero, don't populate the dropdown
                    if (!capacity || capacity < 10 || capacity > 260) {
                        let option = document.createElement('option');
                        option.value = '';
                        option.textContent = 'No valid rows';
                        rowsSelect.appendChild(option);
                        return;
                    }

                    // Populate valid divisors of the capacity between 5 and 26
                    for (let i = 2; i <= 26; i++) {
                        if (capacity % i === 0) {
                            let option = document.createElement('option');
                            option.value = i;
                            option.textContent = i;
                            rowsSelect.appendChild(option);
                        }
                    }

                    // If no valid rows were found, show a default message
                    if (rowsSelect.options.length === 0) {
                        let option = document.createElement('option');
                        option.value = '';
                        option.textContent = 'No valid rows';
                        rowsSelect.appendChild(option);
                    }
                }
            });
        </script>
    }
}
